#! /bin/bash

# Run a test of an old implementation against a new implementation
# We recompile both old and new identically,
# and execute them under pintool
# You will need to tweak the paths to the pintool,
# as well as the name of the pintool, as well as the name of the pintool output

OLD=$HOME/git-work-4
NEW=$HOME/git-work-3
PINDIR=${HOME}/Downloads/pin-2.12-56759-gcc.4.4.7-linux
PINDIR=${HOME}/Downloads/pin-2.12-56759-clang.3.0-mac
PIN=${PINDIR}/pin
TOOLBRIEF=inscount
TOOL=${PINDIR}/source/tools/ManualExamples/obj-intel64/inscount0.dylib
PINOUTPUT=inscount.out

if [ ! -x ${PIN} ] ; then
  echo "${PIN}: Not executable"
  exit 1
fi
if [ ! -e ${TOOL} ] ; then
  echo "${TOOL}: Not found"
  exit 1
fi

pushd ${OLD}/php_agent/axiom/tests > /dev/null
  make --silent clean
popd > /dev/null
pushd ${NEW}/php_agent/axiom/tests > /dev/null
  make --silent clean
popd > /dev/null

function run_test {
  victim=$1

  pushd ${OLD}/php_agent/axiom/tests > /dev/null
    make --silent Makefile.dep
    make --silent -f Makefile.real USE_NRCAMP=1 $victim
    /bin/echo -n OLD: " "; ${PIN} -t $TOOL -- ./$victim
  popd > /dev/null

  pushd ${NEW}/php_agent/axiom/tests > /dev/null
    make --silent Makefile.dep
    make --silent -f Makefile.real USE_NRCAMP=1 $victim
    /bin/echo -n NEW: " "; ${PIN} -t $TOOL -- ./$victim
  popd > /dev/null

  size=$(size $OLD/php_agent/axiom/tests/$victim 2>/dev/null | grep $victim | awk '{print $1;}')
  /bin/echo -n OLD , ${OLD} , $victim , text , $size , $TOOLBRIEF ", "
  cat ${OLD}/php_agent/axiom/tests/${PINOUTPUT}

  size=$(size $NEW/php_agent/axiom/tests/$victim 2>/dev/null | grep $victim | awk '{print $1;}')
  /bin/echo -n NEW , ${NEW} , $victim , text , $size , $TOOLBRIEF ", "
  cat ${NEW}/php_agent/axiom/tests/${PINOUTPUT}

}

all_victims="
  test_app
  test_base64
  test_buffer
  test_connector
  test_harvester
  test_hash
  test_header
  test_helgrind
  test_json
  test_logging
  test_memory
  test_metrics
  test_node_datastore
  test_node_external
  test_node_helpers
  test_node_sql
  test_obfuscate
  test_object
  test_reply
  test_rules
  test_rum
  test_sql
  test_string_pool
  test_strsplit
  test_strings
  test_threads
  test_time
  test_txn
  test_url
"

flakey_victims="
  test_rpm
  test_listener
"

if [ -z "$*" ] ; then
  victims=${all_victims}
else
  victims=$*
fi

for victim in $victims; do
  run_test $victim
done
